name: reusable-export-and-branch-solution
# prepare for releasing to prod:
#   convert solution to managed (using a build PowerPlatform environment for the conversion)
#   upload the solution to the GitHub artifacts and deploy to the PROD environment

on:
  workflow_call:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: Links
        type: string
      # Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: /out
        type: string
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: /solutions
        type: string
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions
       type: string
    # secrets:
    #   token:
    #     required: true
  workflow_dispatch:
    
  release:
    types: [created]
  
env:
#edit your values here
  ENVIRONMENT_URL: ${{vars.DEV_ENVIRONMENT_URL}}
  CLIENT_ID: ${{vars.DEV_CLIENT_ID}}
  TENANT_ID: ${{vars.DEV_TENANT_ID}}
permissions:
  contents: write
jobs:
  export-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.DEV_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        
    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.DEV_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ inputs.solution_name }}
        solution-output-file: ${{ inputs.solution_exported_folder}}/${{ inputs.solution_name }}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ inputs.solution_exported_folder}}/${{ inputs.solution_name }}.zip
        solution-folder: ${{ inputs.solution_folder}}/${{ inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true
    
    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v0
      with:
        solution-folder: ${{ inputs.solution_folder}}/${{ inputs.solution_name }}
        solution-target-folder: ${{ inputs.solution_target_folder}}/${{ inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true